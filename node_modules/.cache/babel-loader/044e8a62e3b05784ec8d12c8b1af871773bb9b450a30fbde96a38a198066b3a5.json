{"ast":null,"code":"// packages/react/use-callback-ref/src/use-callback-ref.tsx\nimport * as React from \"react\";\nfunction useCallbackRef(callback) {\n  const callbackRef = React.useRef(callback);\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n  return React.useMemo(() => function () {\n    var _callbackRef$current;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 ? void 0 : _callbackRef$current.call(callbackRef, ...args);\n  }, []);\n}\nexport { useCallbackRef };","map":{"version":3,"names":["React","useCallbackRef","callback","callbackRef","useRef","useEffect","current","useMemo","_callbackRef$current","_len","arguments","length","args","Array","_key","call"],"sources":["C:\\Users\\ashwi\\OneDrive\\Desktop\\LightRiver UI\\node_modules\\@radix-ui\\react-use-callback-ref\\src\\use-callback-ref.tsx"],"sourcesContent":["import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n"],"mappings":";AAAA,YAAYA,KAAA,MAAW;AAMvB,SAASC,eAAkDC,QAAA,EAA4B;EACrF,MAAMC,WAAA,GAAoBH,KAAA,CAAAI,MAAA,CAAOF,QAAQ;EAEnCF,KAAA,CAAAK,SAAA,CAAU,MAAM;IACpBF,WAAA,CAAYG,OAAA,GAAUJ,QAAA;EACxB,CAAC;EAGD,OAAaF,KAAA,CAAAO,OAAA,CAAQ,MAAO;IAAA,IAAAC,oBAAA;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAIC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAA,QAAAN,oBAAA,GAASL,WAAA,CAAYG,OAAA,cAAAE,oBAAA,uBAAZA,oBAAA,CAAAO,IAAA,CAAAZ,WAAA,EAAsB,GAAGS,IAAI;EAAA,GAAS,EAAE;AACnF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}