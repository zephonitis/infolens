{"ast":null,"code":"// src/primitive.tsx\nvar canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, {\n  checkForDefaultPrevented = true\n} = {}) {\n  return function handleEvent(event) {\n    originalEventHandler?.(event);\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\nfunction getOwnerWindow(element) {\n  if (!canUseDOM) {\n    throw new Error(\"Cannot access window outside of the DOM\");\n  }\n  return element?.ownerDocument?.defaultView ?? window;\n}\nfunction getOwnerDocument(element) {\n  if (!canUseDOM) {\n    throw new Error(\"Cannot access document outside of the DOM\");\n  }\n  return element?.ownerDocument ?? document;\n}\nfunction getActiveElement(node, activeDescendant = false) {\n  const {\n    activeElement\n  } = getOwnerDocument(node);\n  if (!activeElement?.nodeName) {\n    return null;\n  }\n  if (isFrame(activeElement) && activeElement.contentDocument) {\n    return getActiveElement(activeElement.contentDocument.body, activeDescendant);\n  }\n  if (activeDescendant) {\n    const id = activeElement.getAttribute(\"aria-activedescendant\");\n    if (id) {\n      const element = getOwnerDocument(activeElement).getElementById(id);\n      if (element) {\n        return element;\n      }\n    }\n  }\n  return activeElement;\n}\nfunction isFrame(element) {\n  return element.tagName === \"IFRAME\";\n}\nexport { canUseDOM, composeEventHandlers, getActiveElement, getOwnerDocument, getOwnerWindow, isFrame };","map":{"version":3,"names":["canUseDOM","window","document","createElement","composeEventHandlers","originalEventHandler","ourEventHandler","checkForDefaultPrevented","handleEvent","event","defaultPrevented","getOwnerWindow","element","Error","ownerDocument","defaultView","getOwnerDocument","getActiveElement","node","activeDescendant","activeElement","nodeName","isFrame","contentDocument","body","id","getAttribute","getElementById","tagName"],"sources":["C:\\Users\\ashwi\\OneDrive\\Desktop\\LightRiver UI\\node_modules\\@radix-ui\\primitive\\src\\primitive.tsx"],"sourcesContent":["/* eslint-disable no-restricted-properties */\n\n/* eslint-disable no-restricted-globals */\nexport const canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n/* eslint-enable no-restricted-globals */\n\nexport function composeEventHandlers<E extends { defaultPrevented: boolean }>(\n  originalEventHandler?: (event: E) => void,\n  ourEventHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {}\n) {\n  return function handleEvent(event: E) {\n    originalEventHandler?.(event);\n\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\nexport function getOwnerWindow(element: Node | null | undefined) {\n  if (!canUseDOM) {\n    throw new Error('Cannot access window outside of the DOM');\n  }\n  // eslint-disable-next-line no-restricted-globals\n  return element?.ownerDocument?.defaultView ?? window;\n}\n\nexport function getOwnerDocument(element: Node | null | undefined) {\n  if (!canUseDOM) {\n    throw new Error('Cannot access document outside of the DOM');\n  }\n  // eslint-disable-next-line no-restricted-globals\n  return element?.ownerDocument ?? document;\n}\n\n/**\n * Lifted from https://github.com/ariakit/ariakit/blob/main/packages/ariakit-core/src/utils/dom.ts#L37\n * MIT License, Copyright (c) AriaKit.\n */\nexport function getActiveElement(\n  node: Node | null | undefined,\n  activeDescendant = false\n): HTMLElement | null {\n  const { activeElement } = getOwnerDocument(node);\n  if (!activeElement?.nodeName) {\n    // `activeElement` might be an empty object if we're interacting with elements\n    // inside of an iframe.\n    return null;\n  }\n\n  if (isFrame(activeElement) && activeElement.contentDocument) {\n    return getActiveElement(activeElement.contentDocument.body, activeDescendant);\n  }\n\n  if (activeDescendant) {\n    const id = activeElement.getAttribute('aria-activedescendant');\n    if (id) {\n      const element = getOwnerDocument(activeElement).getElementById(id);\n      if (element) {\n        return element;\n      }\n    }\n  }\n\n  return activeElement as HTMLElement | null;\n}\n\nexport function isFrame(element: Element): element is HTMLIFrameElement {\n  return element.tagName === 'IFRAME';\n}\n"],"mappings":";AAGO,IAAMA,SAAA,GAAY,CAAC,EACxB,OAAOC,MAAA,KAAW,eAClBA,MAAA,CAAOC,QAAA,IACPD,MAAA,CAAOC,QAAA,CAASC,aAAA;AAIX,SAASC,qBACdC,oBAAA,EACAC,eAAA,EACA;EAAEC,wBAAA,GAA2B;AAAK,IAAI,CAAC,GACvC;EACA,OAAO,SAASC,YAAYC,KAAA,EAAU;IACpCJ,oBAAA,GAAuBI,KAAK;IAE5B,IAAIF,wBAAA,KAA6B,SAAS,CAACE,KAAA,CAAMC,gBAAA,EAAkB;MACjE,OAAOJ,eAAA,GAAkBG,KAAK;IAChC;EACF;AACF;AAEO,SAASE,eAAeC,OAAA,EAAkC;EAC/D,IAAI,CAACZ,SAAA,EAAW;IACd,MAAM,IAAIa,KAAA,CAAM,yCAAyC;EAC3D;EAEA,OAAOD,OAAA,EAASE,aAAA,EAAeC,WAAA,IAAed,MAAA;AAChD;AAEO,SAASe,iBAAiBJ,OAAA,EAAkC;EACjE,IAAI,CAACZ,SAAA,EAAW;IACd,MAAM,IAAIa,KAAA,CAAM,2CAA2C;EAC7D;EAEA,OAAOD,OAAA,EAASE,aAAA,IAAiBZ,QAAA;AACnC;AAMO,SAASe,iBACdC,IAAA,EACAC,gBAAA,GAAmB,OACC;EACpB,MAAM;IAAEC;EAAc,IAAIJ,gBAAA,CAAiBE,IAAI;EAC/C,IAAI,CAACE,aAAA,EAAeC,QAAA,EAAU;IAG5B,OAAO;EACT;EAEA,IAAIC,OAAA,CAAQF,aAAa,KAAKA,aAAA,CAAcG,eAAA,EAAiB;IAC3D,OAAON,gBAAA,CAAiBG,aAAA,CAAcG,eAAA,CAAgBC,IAAA,EAAML,gBAAgB;EAC9E;EAEA,IAAIA,gBAAA,EAAkB;IACpB,MAAMM,EAAA,GAAKL,aAAA,CAAcM,YAAA,CAAa,uBAAuB;IAC7D,IAAID,EAAA,EAAI;MACN,MAAMb,OAAA,GAAUI,gBAAA,CAAiBI,aAAa,EAAEO,cAAA,CAAeF,EAAE;MACjE,IAAIb,OAAA,EAAS;QACX,OAAOA,OAAA;MACT;IACF;EACF;EAEA,OAAOQ,aAAA;AACT;AAEO,SAASE,QAAQV,OAAA,EAAgD;EACtE,OAAOA,OAAA,CAAQgB,OAAA,KAAY;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}