{"ast":null,"code":"\"use client\";\n\n// src/avatar.tsx\nimport _objectSpread from \"C:/Users/ashwi/OneDrive/Desktop/LightRiver UI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/ashwi/OneDrive/Desktop/LightRiver UI/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"__scopeAvatar\"],\n  _excluded2 = [\"__scopeAvatar\", \"src\", \"onLoadingStatusChange\"],\n  _excluded3 = [\"__scopeAvatar\", \"delayMs\"];\nimport * as React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useIsHydrated } from \"@radix-ui/react-use-is-hydrated\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AVATAR_NAME = \"Avatar\";\nvar [createAvatarContext, createAvatarScope] = createContextScope(AVATAR_NAME);\nvar [AvatarProvider, useAvatarContext] = createAvatarContext(AVATAR_NAME);\nvar Avatar = React.forwardRef((props, forwardedRef) => {\n  const {\n      __scopeAvatar\n    } = props,\n    avatarProps = _objectWithoutProperties(props, _excluded);\n  const [imageLoadingStatus, setImageLoadingStatus] = React.useState(\"idle\");\n  return /* @__PURE__ */jsx(AvatarProvider, {\n    scope: __scopeAvatar,\n    imageLoadingStatus,\n    onImageLoadingStatusChange: setImageLoadingStatus,\n    children: /* @__PURE__ */jsx(Primitive.span, _objectSpread(_objectSpread({}, avatarProps), {}, {\n      ref: forwardedRef\n    }))\n  });\n});\nAvatar.displayName = AVATAR_NAME;\nvar IMAGE_NAME = \"AvatarImage\";\nvar AvatarImage = React.forwardRef((props, forwardedRef) => {\n  const {\n      __scopeAvatar,\n      src,\n      onLoadingStatusChange = () => {}\n    } = props,\n    imageProps = _objectWithoutProperties(props, _excluded2);\n  const context = useAvatarContext(IMAGE_NAME, __scopeAvatar);\n  const imageLoadingStatus = useImageLoadingStatus(src, imageProps);\n  const handleLoadingStatusChange = useCallbackRef(status => {\n    onLoadingStatusChange(status);\n    context.onImageLoadingStatusChange(status);\n  });\n  useLayoutEffect(() => {\n    if (imageLoadingStatus !== \"idle\") {\n      handleLoadingStatusChange(imageLoadingStatus);\n    }\n  }, [imageLoadingStatus, handleLoadingStatusChange]);\n  return imageLoadingStatus === \"loaded\" ? /* @__PURE__ */jsx(Primitive.img, _objectSpread(_objectSpread({}, imageProps), {}, {\n    ref: forwardedRef,\n    src\n  })) : null;\n});\nAvatarImage.displayName = IMAGE_NAME;\nvar FALLBACK_NAME = \"AvatarFallback\";\nvar AvatarFallback = React.forwardRef((props, forwardedRef) => {\n  const {\n      __scopeAvatar,\n      delayMs\n    } = props,\n    fallbackProps = _objectWithoutProperties(props, _excluded3);\n  const context = useAvatarContext(FALLBACK_NAME, __scopeAvatar);\n  const [canRender, setCanRender] = React.useState(delayMs === void 0);\n  React.useEffect(() => {\n    if (delayMs !== void 0) {\n      const timerId = window.setTimeout(() => setCanRender(true), delayMs);\n      return () => window.clearTimeout(timerId);\n    }\n  }, [delayMs]);\n  return canRender && context.imageLoadingStatus !== \"loaded\" ? /* @__PURE__ */jsx(Primitive.span, _objectSpread(_objectSpread({}, fallbackProps), {}, {\n    ref: forwardedRef\n  })) : null;\n});\nAvatarFallback.displayName = FALLBACK_NAME;\nfunction resolveLoadingStatus(image, src) {\n  if (!image) {\n    return \"idle\";\n  }\n  if (!src) {\n    return \"error\";\n  }\n  if (image.src !== src) {\n    image.src = src;\n  }\n  return image.complete && image.naturalWidth > 0 ? \"loaded\" : \"loading\";\n}\nfunction useImageLoadingStatus(src, _ref) {\n  let {\n    referrerPolicy,\n    crossOrigin\n  } = _ref;\n  const isHydrated = useIsHydrated();\n  const imageRef = React.useRef(null);\n  const image = (() => {\n    if (!isHydrated) return null;\n    if (!imageRef.current) {\n      imageRef.current = new window.Image();\n    }\n    return imageRef.current;\n  })();\n  const [loadingStatus, setLoadingStatus] = React.useState(() => resolveLoadingStatus(image, src));\n  useLayoutEffect(() => {\n    setLoadingStatus(resolveLoadingStatus(image, src));\n  }, [image, src]);\n  useLayoutEffect(() => {\n    const updateStatus = status => () => {\n      setLoadingStatus(status);\n    };\n    if (!image) return;\n    const handleLoad = updateStatus(\"loaded\");\n    const handleError = updateStatus(\"error\");\n    image.addEventListener(\"load\", handleLoad);\n    image.addEventListener(\"error\", handleError);\n    if (referrerPolicy) {\n      image.referrerPolicy = referrerPolicy;\n    }\n    if (typeof crossOrigin === \"string\") {\n      image.crossOrigin = crossOrigin;\n    }\n    return () => {\n      image.removeEventListener(\"load\", handleLoad);\n      image.removeEventListener(\"error\", handleError);\n    };\n  }, [image, crossOrigin, referrerPolicy]);\n  return loadingStatus;\n}\nvar Root = Avatar;\nvar Image = AvatarImage;\nvar Fallback = AvatarFallback;\nexport { Avatar, AvatarFallback, AvatarImage, Fallback, Image, Root, createAvatarScope };","map":{"version":3,"names":["React","createContextScope","useCallbackRef","useLayoutEffect","Primitive","useIsHydrated","jsx","AVATAR_NAME","createAvatarContext","createAvatarScope","AvatarProvider","useAvatarContext","Avatar","forwardRef","props","forwardedRef","__scopeAvatar","avatarProps","_objectWithoutProperties","_excluded","imageLoadingStatus","setImageLoadingStatus","useState","scope","onImageLoadingStatusChange","children","span","_objectSpread","ref","displayName","IMAGE_NAME","AvatarImage","src","onLoadingStatusChange","imageProps","_excluded2","context","useImageLoadingStatus","handleLoadingStatusChange","status","img","FALLBACK_NAME","AvatarFallback","delayMs","fallbackProps","_excluded3","canRender","setCanRender","useEffect","timerId","window","setTimeout","clearTimeout","resolveLoadingStatus","image","complete","naturalWidth","_ref","referrerPolicy","crossOrigin","isHydrated","imageRef","useRef","current","Image","loadingStatus","setLoadingStatus","updateStatus","handleLoad","handleError","addEventListener","removeEventListener","Root","Fallback"],"sources":["C:\\Users\\ashwi\\OneDrive\\Desktop\\LightRiver UI\\node_modules\\@radix-ui\\react-avatar\\src\\avatar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useIsHydrated } from '@radix-ui/react-use-is-hydrated';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Avatar\n * -----------------------------------------------------------------------------------------------*/\n\nconst AVATAR_NAME = 'Avatar';\n\ntype ScopedProps<P> = P & { __scopeAvatar?: Scope };\nconst [createAvatarContext, createAvatarScope] = createContextScope(AVATAR_NAME);\n\ntype ImageLoadingStatus = 'idle' | 'loading' | 'loaded' | 'error';\n\ntype AvatarContextValue = {\n  imageLoadingStatus: ImageLoadingStatus;\n  onImageLoadingStatusChange(status: ImageLoadingStatus): void;\n};\n\nconst [AvatarProvider, useAvatarContext] = createAvatarContext<AvatarContextValue>(AVATAR_NAME);\n\ntype AvatarElement = React.ComponentRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface AvatarProps extends PrimitiveSpanProps {}\n\nconst Avatar = React.forwardRef<AvatarElement, AvatarProps>(\n  (props: ScopedProps<AvatarProps>, forwardedRef) => {\n    const { __scopeAvatar, ...avatarProps } = props;\n    const [imageLoadingStatus, setImageLoadingStatus] = React.useState<ImageLoadingStatus>('idle');\n    return (\n      <AvatarProvider\n        scope={__scopeAvatar}\n        imageLoadingStatus={imageLoadingStatus}\n        onImageLoadingStatusChange={setImageLoadingStatus}\n      >\n        <Primitive.span {...avatarProps} ref={forwardedRef} />\n      </AvatarProvider>\n    );\n  }\n);\n\nAvatar.displayName = AVATAR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarImage\n * -----------------------------------------------------------------------------------------------*/\n\nconst IMAGE_NAME = 'AvatarImage';\n\ntype AvatarImageElement = React.ComponentRef<typeof Primitive.img>;\ntype PrimitiveImageProps = React.ComponentPropsWithoutRef<typeof Primitive.img>;\ninterface AvatarImageProps extends PrimitiveImageProps {\n  onLoadingStatusChange?: (status: ImageLoadingStatus) => void;\n}\n\nconst AvatarImage = React.forwardRef<AvatarImageElement, AvatarImageProps>(\n  (props: ScopedProps<AvatarImageProps>, forwardedRef) => {\n    const { __scopeAvatar, src, onLoadingStatusChange = () => {}, ...imageProps } = props;\n    const context = useAvatarContext(IMAGE_NAME, __scopeAvatar);\n    const imageLoadingStatus = useImageLoadingStatus(src, imageProps);\n    const handleLoadingStatusChange = useCallbackRef((status: ImageLoadingStatus) => {\n      onLoadingStatusChange(status);\n      context.onImageLoadingStatusChange(status);\n    });\n\n    useLayoutEffect(() => {\n      if (imageLoadingStatus !== 'idle') {\n        handleLoadingStatusChange(imageLoadingStatus);\n      }\n    }, [imageLoadingStatus, handleLoadingStatusChange]);\n\n    return imageLoadingStatus === 'loaded' ? (\n      <Primitive.img {...imageProps} ref={forwardedRef} src={src} />\n    ) : null;\n  }\n);\n\nAvatarImage.displayName = IMAGE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarFallback\n * -----------------------------------------------------------------------------------------------*/\n\nconst FALLBACK_NAME = 'AvatarFallback';\n\ntype AvatarFallbackElement = React.ComponentRef<typeof Primitive.span>;\ninterface AvatarFallbackProps extends PrimitiveSpanProps {\n  delayMs?: number;\n}\n\nconst AvatarFallback = React.forwardRef<AvatarFallbackElement, AvatarFallbackProps>(\n  (props: ScopedProps<AvatarFallbackProps>, forwardedRef) => {\n    const { __scopeAvatar, delayMs, ...fallbackProps } = props;\n    const context = useAvatarContext(FALLBACK_NAME, __scopeAvatar);\n    const [canRender, setCanRender] = React.useState(delayMs === undefined);\n\n    React.useEffect(() => {\n      if (delayMs !== undefined) {\n        const timerId = window.setTimeout(() => setCanRender(true), delayMs);\n        return () => window.clearTimeout(timerId);\n      }\n    }, [delayMs]);\n\n    return canRender && context.imageLoadingStatus !== 'loaded' ? (\n      <Primitive.span {...fallbackProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nAvatarFallback.displayName = FALLBACK_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction resolveLoadingStatus(image: HTMLImageElement | null, src?: string): ImageLoadingStatus {\n  if (!image) {\n    return 'idle';\n  }\n  if (!src) {\n    return 'error';\n  }\n  if (image.src !== src) {\n    image.src = src;\n  }\n  return image.complete && image.naturalWidth > 0 ? 'loaded' : 'loading';\n}\n\nfunction useImageLoadingStatus(\n  src: string | undefined,\n  { referrerPolicy, crossOrigin }: AvatarImageProps\n) {\n  const isHydrated = useIsHydrated();\n  const imageRef = React.useRef<HTMLImageElement | null>(null);\n  const image = (() => {\n    if (!isHydrated) return null;\n    if (!imageRef.current) {\n      imageRef.current = new window.Image();\n    }\n    return imageRef.current;\n  })();\n\n  const [loadingStatus, setLoadingStatus] = React.useState<ImageLoadingStatus>(() =>\n    resolveLoadingStatus(image, src)\n  );\n\n  useLayoutEffect(() => {\n    setLoadingStatus(resolveLoadingStatus(image, src));\n  }, [image, src]);\n\n  useLayoutEffect(() => {\n    const updateStatus = (status: ImageLoadingStatus) => () => {\n      setLoadingStatus(status);\n    };\n\n    if (!image) return;\n\n    const handleLoad = updateStatus('loaded');\n    const handleError = updateStatus('error');\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (referrerPolicy) {\n      image.referrerPolicy = referrerPolicy;\n    }\n    if (typeof crossOrigin === 'string') {\n      image.crossOrigin = crossOrigin;\n    }\n\n    return () => {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    };\n  }, [image, crossOrigin, referrerPolicy]);\n\n  return loadingStatus;\n}\n\nconst Root = Avatar;\nconst Image = AvatarImage;\nconst Fallback = AvatarFallback;\n\nexport {\n  createAvatarScope,\n  //\n  Avatar,\n  AvatarImage,\n  AvatarFallback,\n  //\n  Root,\n  Image,\n  Fallback,\n};\nexport type { AvatarProps, AvatarImageProps, AvatarFallbackProps };\n"],"mappings":";;;;;;;;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,kBAAA,QAA0B;AACnC,SAASC,cAAA,QAAsB;AAC/B,SAASC,eAAA,QAAuB;AAChC,SAASC,SAAA,QAAiB;AAC1B,SAASC,aAAA,QAAqB;AAoCtB,SAAAC,GAAA;AA5BR,IAAMC,WAAA,GAAc;AAGpB,IAAM,CAACC,mBAAA,EAAqBC,iBAAiB,IAAIR,kBAAA,CAAmBM,WAAW;AAS/E,IAAM,CAACG,cAAA,EAAgBC,gBAAgB,IAAIH,mBAAA,CAAwCD,WAAW;AAM9F,IAAMK,MAAA,GAAeZ,KAAA,CAAAa,UAAA,CACnB,CAACC,KAAA,EAAiCC,YAAA,KAAiB;EACjD,MAAM;MAAEC;IAA8B,IAAIF,KAAA;IAAhBG,WAAA,GAAAC,wBAAA,CAAgBJ,KAAA,EAAAK,SAAA;EAC1C,MAAM,CAACC,kBAAA,EAAoBC,qBAAqB,IAAUrB,KAAA,CAAAsB,QAAA,CAA6B,MAAM;EAC7F,OACE,eAAAhB,GAAA,CAACI,cAAA;IACCa,KAAA,EAAOP,aAAA;IACPI,kBAAA;IACAI,0BAAA,EAA4BH,qBAAA;IAE5BI,QAAA,iBAAAnB,GAAA,CAACF,SAAA,CAAUsB,IAAA,EAAAC,aAAA,CAAAA,aAAA,KAASV,WAAA;MAAaW,GAAA,EAAKb;IAAA,EAAc;EAAA,CACtD;AAEJ,CACF;AAEAH,MAAA,CAAOiB,WAAA,GAActB,WAAA;AAMrB,IAAMuB,UAAA,GAAa;AAQnB,IAAMC,WAAA,GAAoB/B,KAAA,CAAAa,UAAA,CACxB,CAACC,KAAA,EAAsCC,YAAA,KAAiB;EACtD,MAAM;MAAEC,aAAA;MAAegB,GAAA;MAAKC,qBAAA,GAAwBA,CAAA,KAAM,CAAC;IAAiB,IAAInB,KAAA;IAAfoB,UAAA,GAAAhB,wBAAA,CAAeJ,KAAA,EAAAqB,UAAA;EAChF,MAAMC,OAAA,GAAUzB,gBAAA,CAAiBmB,UAAA,EAAYd,aAAa;EAC1D,MAAMI,kBAAA,GAAqBiB,qBAAA,CAAsBL,GAAA,EAAKE,UAAU;EAChE,MAAMI,yBAAA,GAA4BpC,cAAA,CAAgBqC,MAAA,IAA+B;IAC/EN,qBAAA,CAAsBM,MAAM;IAC5BH,OAAA,CAAQZ,0BAAA,CAA2Be,MAAM;EAC3C,CAAC;EAEDpC,eAAA,CAAgB,MAAM;IACpB,IAAIiB,kBAAA,KAAuB,QAAQ;MACjCkB,yBAAA,CAA0BlB,kBAAkB;IAC9C;EACF,GAAG,CAACA,kBAAA,EAAoBkB,yBAAyB,CAAC;EAElD,OAAOlB,kBAAA,KAAuB,WAC5B,eAAAd,GAAA,CAACF,SAAA,CAAUoC,GAAA,EAAAb,aAAA,CAAAA,aAAA,KAAQO,UAAA;IAAYN,GAAA,EAAKb,YAAA;IAAciB;EAAA,EAAU,IAC1D;AACN,CACF;AAEAD,WAAA,CAAYF,WAAA,GAAcC,UAAA;AAM1B,IAAMW,aAAA,GAAgB;AAOtB,IAAMC,cAAA,GAAuB1C,KAAA,CAAAa,UAAA,CAC3B,CAACC,KAAA,EAAyCC,YAAA,KAAiB;EACzD,MAAM;MAAEC,aAAA;MAAe2B;IAA0B,IAAI7B,KAAA;IAAlB8B,aAAA,GAAA1B,wBAAA,CAAkBJ,KAAA,EAAA+B,UAAA;EACrD,MAAMT,OAAA,GAAUzB,gBAAA,CAAiB8B,aAAA,EAAezB,aAAa;EAC7D,MAAM,CAAC8B,SAAA,EAAWC,YAAY,IAAU/C,KAAA,CAAAsB,QAAA,CAASqB,OAAA,KAAY,MAAS;EAEhE3C,KAAA,CAAAgD,SAAA,CAAU,MAAM;IACpB,IAAIL,OAAA,KAAY,QAAW;MACzB,MAAMM,OAAA,GAAUC,MAAA,CAAOC,UAAA,CAAW,MAAMJ,YAAA,CAAa,IAAI,GAAGJ,OAAO;MACnE,OAAO,MAAMO,MAAA,CAAOE,YAAA,CAAaH,OAAO;IAC1C;EACF,GAAG,CAACN,OAAO,CAAC;EAEZ,OAAOG,SAAA,IAAaV,OAAA,CAAQhB,kBAAA,KAAuB,WACjD,eAAAd,GAAA,CAACF,SAAA,CAAUsB,IAAA,EAAAC,aAAA,CAAAA,aAAA,KAASiB,aAAA;IAAehB,GAAA,EAAKb;EAAA,EAAc,IACpD;AACN,CACF;AAEA2B,cAAA,CAAeb,WAAA,GAAcY,aAAA;AAI7B,SAASY,qBAAqBC,KAAA,EAAgCtB,GAAA,EAAkC;EAC9F,IAAI,CAACsB,KAAA,EAAO;IACV,OAAO;EACT;EACA,IAAI,CAACtB,GAAA,EAAK;IACR,OAAO;EACT;EACA,IAAIsB,KAAA,CAAMtB,GAAA,KAAQA,GAAA,EAAK;IACrBsB,KAAA,CAAMtB,GAAA,GAAMA,GAAA;EACd;EACA,OAAOsB,KAAA,CAAMC,QAAA,IAAYD,KAAA,CAAME,YAAA,GAAe,IAAI,WAAW;AAC/D;AAEA,SAASnB,sBACPL,GAAA,EAAAyB,IAAA,EAEA;EAAA,IADA;IAAEC,cAAA;IAAgBC;EAAY,IAAAF,IAAA;EAE9B,MAAMG,UAAA,GAAavD,aAAA,CAAc;EACjC,MAAMwD,QAAA,GAAiB7D,KAAA,CAAA8D,MAAA,CAAgC,IAAI;EAC3D,MAAMR,KAAA,IAAS,MAAM;IACnB,IAAI,CAACM,UAAA,EAAY,OAAO;IACxB,IAAI,CAACC,QAAA,CAASE,OAAA,EAAS;MACrBF,QAAA,CAASE,OAAA,GAAU,IAAIb,MAAA,CAAOc,KAAA,CAAM;IACtC;IACA,OAAOH,QAAA,CAASE,OAAA;EAClB,GAAG;EAEH,MAAM,CAACE,aAAA,EAAeC,gBAAgB,IAAUlE,KAAA,CAAAsB,QAAA,CAA6B,MAC3E+B,oBAAA,CAAqBC,KAAA,EAAOtB,GAAG,CACjC;EAEA7B,eAAA,CAAgB,MAAM;IACpB+D,gBAAA,CAAiBb,oBAAA,CAAqBC,KAAA,EAAOtB,GAAG,CAAC;EACnD,GAAG,CAACsB,KAAA,EAAOtB,GAAG,CAAC;EAEf7B,eAAA,CAAgB,MAAM;IACpB,MAAMgE,YAAA,GAAgB5B,MAAA,IAA+B,MAAM;MACzD2B,gBAAA,CAAiB3B,MAAM;IACzB;IAEA,IAAI,CAACe,KAAA,EAAO;IAEZ,MAAMc,UAAA,GAAaD,YAAA,CAAa,QAAQ;IACxC,MAAME,WAAA,GAAcF,YAAA,CAAa,OAAO;IACxCb,KAAA,CAAMgB,gBAAA,CAAiB,QAAQF,UAAU;IACzCd,KAAA,CAAMgB,gBAAA,CAAiB,SAASD,WAAW;IAC3C,IAAIX,cAAA,EAAgB;MAClBJ,KAAA,CAAMI,cAAA,GAAiBA,cAAA;IACzB;IACA,IAAI,OAAOC,WAAA,KAAgB,UAAU;MACnCL,KAAA,CAAMK,WAAA,GAAcA,WAAA;IACtB;IAEA,OAAO,MAAM;MACXL,KAAA,CAAMiB,mBAAA,CAAoB,QAAQH,UAAU;MAC5Cd,KAAA,CAAMiB,mBAAA,CAAoB,SAASF,WAAW;IAChD;EACF,GAAG,CAACf,KAAA,EAAOK,WAAA,EAAaD,cAAc,CAAC;EAEvC,OAAOO,aAAA;AACT;AAEA,IAAMO,IAAA,GAAO5D,MAAA;AACb,IAAMoD,KAAA,GAAQjC,WAAA;AACd,IAAM0C,QAAA,GAAW/B,cAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}